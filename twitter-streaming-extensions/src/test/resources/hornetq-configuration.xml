<?xml version="1.0"?>
<!-- ~ Copyright 2009 Red Hat, Inc. ~ Red Hat licenses this file to you under 
	the Apache License, version ~ 2.0 (the "License"); you may not use this file 
	except in compliance ~ with the License. You may obtain a copy of the License 
	at ~ http://www.apache.org/licenses/LICENSE-2.0 ~ Unless required by applicable 
	law or agreed to in writing, software ~ distributed under the License is 
	distributed on an "AS IS" BASIS, ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY 
	KIND, either express or ~ implied. See the License for the specific language 
	governing ~ permissions and limitations under the License. -->
<configuration xmlns="urn:hornetq"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="urn:hornetq /schema/hornetq-configuration.xsd">
	<log-delegate-factory-class-name>org.hornetq.integration.logging.Log4jLogDelegateFactory
	</log-delegate-factory-class-name>
	<bindings-directory>${jboss.server.data.dir}/hornetq/bindings
	</bindings-directory>
	<journal-directory>${jboss.server.data.dir}/hornetq/journal
	</journal-directory>
	<!-- Default journal file size is set to 1Mb for faster first boot -->
	<journal-file-size>${hornetq.journal.file.size:1048576}
	</journal-file-size>
	<!-- Default journal min file is 2, increase for higher average msg rates -->
	<journal-min-files>${hornetq.journal.min.files:2}</journal-min-files>
	<large-messages-directory>${jboss.server.data.dir}/hornetq/largemessages
	</large-messages-directory>
	<paging-directory>${jboss.server.data.dir}/hornetq/paging
	</paging-directory>
	<connectors>
		<connector name="netty">
			<factory-class>org.hornetq.core.remoting.impl.netty.NettyConnectorFactory
			</factory-class>
			<param key="host" value="${jboss.bind.address:localhost}" />
			<param key="port" value="${hornetq.remoting.netty.port:5445}" />
		</connector>
		<connector name="netty-throughput">
			<factory-class>org.hornetq.core.remoting.impl.netty.NettyConnectorFactory
			</factory-class>
			<param key="host" value="${jboss.bind.address:localhost}" />
			<param key="port" value="${hornetq.remoting.netty.batch.port:5455}" />
			<param key="batch-delay" value="50" />
		</connector>
		<connector name="in-vm">
			<factory-class>org.hornetq.core.remoting.impl.invm.InVMConnectorFactory
			</factory-class>
			<param key="server-id" value="${hornetq.server-id:0}" />
		</connector>
	</connectors>
	<acceptors>
		<acceptor name="netty">
			<factory-class>org.hornetq.core.remoting.impl.netty.NettyAcceptorFactory
			</factory-class>
			<param key="host" value="${jboss.bind.address:localhost}" />
			<param key="port" value="${hornetq.remoting.netty.port:5445}" />
		</acceptor>
		<acceptor name="netty-throughput">
			<factory-class>org.hornetq.core.remoting.impl.netty.NettyAcceptorFactory
			</factory-class>
			<param key="host" value="${jboss.bind.address:localhost}" />
			<param key="port" value="${hornetq.remoting.netty.batch.port:5455}" />
			<param key="batch-delay" value="50" />
			<param key="direct-deliver" value="false" />
		</acceptor>
		<acceptor name="in-vm">
			<factory-class>org.hornetq.core.remoting.impl.invm.InVMAcceptorFactory
			</factory-class>
			<param key="server-id" value="0" />
		</acceptor>
	</acceptors>
	<security-settings>
		<security-setting match="#">
			<permission type="createNonDurableQueue" roles="guest" />
			<permission type="deleteNonDurableQueue" roles="guest" />
			<permission type="consume" roles="guest" />
			<permission type="send" roles="guest" />
		</security-setting>
	</security-settings>
	<address-settings>
		<!--default for catch all -->
		<address-setting match="#">
			<dead-letter-address>jms.queue.DLQ</dead-letter-address>
			<expiry-address>jms.queue.ExpiryQueue</expiry-address>
			<redelivery-delay>0</redelivery-delay>
			<max-size-bytes>10485760</max-size-bytes>
			<message-counter-history-day-limit>10
			</message-counter-history-day-limit>
			<address-full-policy>BLOCK</address-full-policy>
		</address-setting>
		<address-setting match="jms.queue.lastTweetQueueG">
			<last-value-queue>true</last-value-queue>
		</address-setting>
	</address-settings>
	<queues>
		<queue name="jms.queue.incomingQueueFilter">
			<address>jms.queue.incomingQueueFilter</address>
		</queue>
	</queues>
	<connector-services>
		<connector-service name="my-user-tweets">
			<factory-class>br.com.porcelli.hornetq.integration.twitter.TwitterUserStreamConnectorServiceFactory
			</factory-class>
			<param key="queue" value="jms.queue.incomingQueueFilter" />
			<param key="lastTweetQueue" value="jms.queue.lastTweetQueueG" />
			<param key="consumerKey" value="ZqLvRuUhUWUF2J68LA" />
			<param key="consumerSecret" value="4oSiD7S2bDicFwMeTAXQGWDq03Od46zoI8Nrb9VmA" />
			<param key="accessToken" value="18147779-gubQOvnh3XH66N2BXn8BTEtn5J49e9hqRSbK7l2PA" />
			<param key="accessTokenSecret" value="GGojPbkKQors82XYMbnRwrXaglXvPwsBgu1KwpPXmM" />
			<param key="screenName" value="porcelli" />
			<param key="mentionedUsers" value="hburlamaqui" />
			<param key="streamListeners"
				value="br.com.porcelli.hornetq.integration.twitter.listener.TwitterUserStreamSimpleListener" />
		</connector-service>
		<!-- <connector-service name="my-status-tweets"> <factory-class>br.com.porcelli.hornetq.integration.twitter.TwitterStatusStreamConnectorServiceFactory</factory-class> 
			<param key="queue" value="jms.queue.incomingQueueFilter"/> <param key="lastTweetQueue" 
			value="jms.queue.lastTweetQueueG"/> <param key="consumerKey" value="ZqLvRuUhUWUF2J68LA"/> 
			<param key="consumerSecret" value="4oSiD7S2bDicFwMeTAXQGWDq03Od46zoI8Nrb9VmA"/> 
			<param key="accessToken" value="18147779-gubQOvnh3XH66N2BXn8BTEtn5J49e9hqRSbK7l2PA"/> 
			<param key="accessTokenSecret" value="GGojPbkKQors82XYMbnRwrXaglXvPwsBgu1KwpPXmM"/> 
			<param key="streamListeners" value="br.com.porcelli.hornetq.integration.twitter.listener.TwitterStatusStreamSimpleListener"/> 
			</connector-service> <connector-service name="my-status-tweets"> <factory-class>br.com.porcelli.hornetq.integration.twitter.TwitterSiteStreamConnectorServiceFactory</factory-class> 
			<param key="queue" value="jms.queue.incomingQueueFilter"/> <param key="lastTweetQueue" 
			value="jms.queue.lastTweetQueueG"/> <param key="consumerKey" value="ZqLvRuUhUWUF2J68LA"/> 
			<param key="consumerSecret" value="4oSiD7S2bDicFwMeTAXQGWDq03Od46zoI8Nrb9VmA"/> 
			<param key="accessToken" value="18147779-gubQOvnh3XH66N2BXn8BTEtn5J49e9hqRSbK7l2PA"/> 
			<param key="accessTokenSecret" value="GGojPbkKQors82XYMbnRwrXaglXvPwsBgu1KwpPXmM"/> 
			<param key="streamListeners" value="br.com.porcelli.hornetq.integration.twitter.listener.TwitterSiteStreamSimpleListener"/> 
			<param key="mentionedUsers" value="porcelli"/> </connector-service> -->
	</connector-services>
</configuration>
